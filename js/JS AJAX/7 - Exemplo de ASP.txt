AJAX é usado para criar aplicativos mais interativos.

.----------------.
| Exemplo de ASP |
'----------------'

O exemplo a seguir demonstrará como uma página da Web pode se comunicar com um servidor da Web enquanto um usuário digita caracteres em um campo de entrada:

.-------------------.
| Exemplo explicado |
'-------------------'

No exemplo acima, quando um usuário digita um caractere no campo de entrada, uma função chamada showHint() é executada.

A função é acionada pelo evento onkeyup.

Aqui está o código:


Exemplo

  <p>Start typing a name in the input field below:</p>
  <p>Suggestions: <span id="txtHint"></span></p>

  <form>
  First name: <input type="text" onkeyup="showHint(this.value)">
  </form>

  <script>
  function showHint(str) {
    if (str.length == 0) {
      document.getElementById("txtHint").innerHTML = "";
      return;
    } else {
      const xmlhttp = new XMLHttpRequest();
      xmlhttp.onload = function() {
        document.getElementById("txtHint").innerHTML = this.responseText;
      }
    xmlhttp.open("GET", "gethint.asp?q=" + str);
    xmlhttp.send();
    }
  }
  </script>

https://www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_suggest_asp

Explicação do código:

Primeiro, verifique se o campo de entrada está vazio (str.length == 0). Se estiver, limpe o conteúdo do espaço reservado txtHint e saia da função.

No entanto, se o campo de entrada não estiver vazio, faça o seguinte:

  * Criar um objeto XMLHttpRequest
  * Crie a função a ser executada quando a resposta do servidor estiver pronta
  * Envie a solicitação para um arquivo ASP (gethint.asp) no servidor
  * Observe que o parâmetro q é adicionado gethint.asp?q="+str
  * A variável str contém o conteúdo do campo de entrada

.-------------------------------.
| O arquivo ASP - "gethint.asp" |
'-------------------------------'

O arquivo ASP verifica uma matriz de nomes e retorna o(s) nome(s) correspondente(s) ao navegador:

<%
response.expires=-1
dim a(30)
'Fill up array with names
a(1)="Anna"
a(2)="Brittany"
a(3)="Cinderella"
a(4)="Diana"
a(5)="Eva"
a(6)="Fiona"
a(7)="Gunda"
a(8)="Hege"
a(9)="Inga"
a(10)="Johanna"
a(11)="Kitty"
a(12)="Linda"
a(13)="Nina"
a(14)="Ophelia"
a(15)="Petunia"
a(16)="Amanda"
a(17)="Raquel"
a(18)="Cindy"
a(19)="Doris"
a(20)="Eve"
a(21)="Evita"
a(22)="Sunniva"
a(23)="Tove"
a(24)="Unni"
a(25)="Violet"
a(26)="Liza"
a(27)="Elizabeth"
a(28)="Ellen"
a(29)="Wenche"
a(30)="Vicky"

'get the q parameter from URL
q=ucase(request.querystring("q"))

'lookup all hints from array if length of q>0
if len(q)>0 then
  hint=""
  for i=1 to 30
    if q=ucase(mid(a(i),1,len(q))) then
      if hint="" then
        hint=a(i)
      else
        hint=hint & " , " & a(i)
      end if
    end if
  next
end if

'Output "no suggestion" if no hint were found
'or output the correct values
if hint="" then
  response.write("no suggestion")
else
  response.write(hint)
end if
%>