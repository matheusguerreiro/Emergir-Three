AJAX é usado para criar aplicativos mais interativos.

.-------------.
| Exemplo PHP |
'-------------'

O exemplo a seguir demonstra como uma página da Web pode se comunicar com um servidor da Web enquanto um usuário digita caracteres em um campo de entrada:

.-------------------.
| Exemplo explicado |
'-------------------'

No exemplo acima, quando um usuário digita um caractere no campo de entrada, uma função chamada showHint() é executada.

A função é acionada pelo evento onkeyup.

Aqui está o código:


Exemplo

  <p>Start typing a name in the input field below:</p>
  <p>Suggestions: <span id="txtHint"></span></p>

  <form>
  First name: <input type="text" onkeyup="showHint(this.value)">
  </form>

  <script>
  function showHint(str) {
    if (str.length == 0) {
      document.getElementById("txtHint").innerHTML = "";
      return;
    } else {
      const xmlhttp = new XMLHttpRequest();
      xmlhttp.onload = function() {
        document.getElementById("txtHint").innerHTML = this.responseText;
      }
    xmlhttp.open("GET", "gethint.php?q=" + str);
    xmlhttp.send();
    }
  }
  </script>

https://www.w3schools.com/js/tryit.asp?filename=tryjs_ajax_suggest_php

Explicação do código:

Primeiro, verifique se o campo de entrada está vazio (str.length == 0). Se estiver, limpe o conteúdo do espaço reservado txtHint e saia da função.

No entanto, se o campo de entrada não estiver vazio, faça o seguinte:

  * Criar um objeto XMLHttpRequest
  * Crie a função a ser executada quando a resposta do servidor estiver pronta
  * Envie a solicitação para um arquivo PHP (gethint.php) no servidor
  * Observe que o parâmetro q é adicionado gethint.php?q="+str
  * A variável str contém o conteúdo do campo de entrada

.-------------------------------.
| O arquivo PHP - "gethint.php" |
'-------------------------------'

O arquivo PHP verifica uma matriz de nomes e retorna o(s) nome(s) correspondente(s) ao navegador:

<?php
// Array with names
$a[] = "Anna";
$a[] = "Brittany";
$a[] = "Cinderella";
$a[] = "Diana";
$a[] = "Eva";
$a[] = "Fiona";
$a[] = "Gunda";
$a[] = "Hege";
$a[] = "Inga";
$a[] = "Johanna";
$a[] = "Kitty";
$a[] = "Linda";
$a[] = "Nina";
$a[] = "Ophelia";
$a[] = "Petunia";
$a[] = "Amanda";
$a[] = "Raquel";
$a[] = "Cindy";
$a[] = "Doris";
$a[] = "Eve";
$a[] = "Evita";
$a[] = "Sunniva";
$a[] = "Tove";
$a[] = "Unni";
$a[] = "Violet";
$a[] = "Liza";
$a[] = "Elizabeth";
$a[] = "Ellen";
$a[] = "Wenche";
$a[] = "Vicky";

// get the q parameter from URL
$q = $_REQUEST["q"];

$hint = "";

// lookup all hints from array if $q is different from ""
if ($q !== "") {
  $q = strtolower($q);
  $len=strlen($q);
  foreach($a as $name) {
    if (stristr($q, substr($name, 0, $len))) {
      if ($hint === "") {
        $hint = $name;
      } else {
        $hint .= ", $name";
      }
    }
  }
}

// Output "no suggestion" if no hint was found or output correct values
echo $hint === "" ? "no suggestion" : $hint;
?>
